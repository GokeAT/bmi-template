pipeline {
    agent any
    environment {
            DATABASE_URI= credentials("DATABASE_URI")
            SECRET_KEY = credentials("SECRET_KEY")
            DOCKER_LOGIN = credentials("DOCKER_LOGIN")
            rebuild_db = 'true'
            install_docker = 'false'
    }
    stages {
        stage('Test'){
            steps{
                sh 'bash jenkins/test.sh'
            }  
        }
        stage('Setup Docker'){
            steps {
                script{
                    if (env.install_docker == 'true'){
                        sh 'bash jenkins/setup-docker.sh'
                        }
                    } 
            }
        stage('Build'){
            steps {
                sh 'docker-compose build --parallel' 
            }  
        }
        stage('Push'){
            steps{
                sh 'docker login -u ${DOCKER_LOGIN_USR} -p ${DOCKER_LOGIN_PSW}'
                sh 'docker-compose push' 
            } 
        }
        stage('Run'){
            steps{
                sh 'docker-compose up -d'
                script{
                        if (env.rebuild_db == 'true'){
                            sh 'docker exec bmi-template python create.py'
                        }
                    } 
            }  
        }
    }
    post {
        always{
            junit '**/*.xml'
            cobertura coberturaReportFile: 'coverage.xml', failNoReports: false
        }

    }
}
}